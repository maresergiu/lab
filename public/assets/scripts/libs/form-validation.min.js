/* Form Validation 5.1.2 */
window.FormValidation || (window.FormValidation = {}), window.FormValidation.Application = function () { "use strict"; function e() { this.submit = !1, this.valid = !1, this.validRequiredOnly = !1 } var t = function (t, i) { var r = !1, a = null, o = null, s = null, d = null, l = { form: new e, segs: [], activeSeg: 0, id: "modForm_" + i, customRules: {}, disabledSegs: 0 }, u = { data: [] }, f = null, c = void 0, m = !0, v = {}, p = void 0, h = [], g = 0, y = 0, b = 0, w = !1, x = {}, _ = function () { "undefined" != typeof FormValidation.Manifest.ExtensionRules && S.extensions.registerRules(), S.set(), S._dom(), F() }, S = { inline: void 0, summary: void 0, instantFeedback: void 0, serverErrorMessage: void 0, extensions: { registerRules: function () { var e = new window.FormValidation.Manifest.ExtensionRules; for (var t in e) "function" == typeof e[t] && (E.rules[t] = e[t]) } }, set: function () { S.inline = t.data("inline-errors") === !0, S.summary = t.data("error-summary") === !0, S.instantFeedback = t.data("instant-feedback") === !0, S.serverErrorMessage = t.attr("data-server-error-message") || "", S.disableSubmit = t.attr("data-disable-submit"), a = t.find(".form-section"), o = a.find(".form-field"), s = a.find('[data-type="multiline"] textarea, [data-type="select"] select, [data-type="selectGroup"] select, [data-type="hidden"] input, [data-type="number"] input, [data-type="text"] input, [data-type="email"] input, [data-type="radio"] input, [data-type="checkbox"] input, [data-type="multi"] input, [data-type="password"] input, [data-type="file"] input, [data-type="url"] input, [data-type="tel"] input, [data-type="search"] input'); for (var i = 0; i < a.length; i += 1) l.segs.push(new e); v = {}, v.full = function () { }, t.attr("data-id", l.id), t.find(".form-section").each(function (e) { var t = "batch_" + (e + 1); $(this).attr("data-id", t), v[t] = function () { } }) }, _status: { get: function (e, t) { return l.segs[e][t] }, set: function (e, t, i) { if ("undefined" != typeof i) return void (l.segs[i][e] = t); for (var n = 0; n < l.segs.length; n += 1) l.segs[n][e] = t }, setSubmitted: function (e, t) { this.set("submit", e, t) }, setValidity: function (e, t) { this.set("valid", e, t) } }, _dom: function () { t.find("[data-custom-regex]").each(function (e) { var t = $(this), i = new RegExp(t.data("custom-regex")), n = (e + 1 + (new Date).getTime()).toString().split("").sort(function () { return .5 - Math.random() }).join(""); l.customRules[n] = i, t.data("custom-regex", n) }), a.each(function () { $(this).attr("data-section-id", arguments[0]) }) } }, V = { complexObject: function (e) { function t(e, i) { for (var n in i) try { i[n].constructor == Object ? e[n] = t(e[n], i[n]) : e[n] = i[n] } catch (r) { e[n] = i[n] } return e } function i(e, t) { for (var i = {}, n = i, r = 0; r < e.length; r += 1) i[e[r]] = r === e.length - 1 ? t : {}, i = i[e[r]]; return n } var n = {}; for (var r in e) -1 !== r.indexOf(".") ? n = t(n, i(r.split("."), e[r])) : n[r] = e[r]; return n }, isRequired: function (e) { var t, i = !1, n = e.data("validation"); if ("undefined" != typeof n) { t = n.split("|"); for (var r = 0; r < t.length; r += 1) if ("required" === t[r]) { i = !0; break } } return i } }, F = function () { function e() { o = !0, setTimeout(function () { o = !1 }, 100) } function i(t) { c = "partial", e(), S._status.setSubmitted(!0, t.data("section-id")), l.disabledSegs = 0, k.formSection(t) } function n() { c = "full", y = 0, l.disabledSegs = a.filter(".disabled").length, S._status.setSubmitted(!0), k._formValid() } var r, o = !1, u = !1; s.on({ change: function (e, t) { o || "undefined" != typeof t && t.prevent || (d = $(this), c = "field", l.disabledSegs = 0, k.formSection(d.closest(".form-section"))) }, focus: function () { l.activeSeg = $(this).closest(".form-section").data("section-id"), r = $(this) }, blur: function () { r = void 0 }, keyup: function (e) { S.instantFeedback === !0 && "requiredonly" === S.disableSubmit && e.hasOwnProperty("key") && (1 !== e.key.length && "Backspace" !== e.key && "Delete" !== e.key && "Paste" !== e.key && "Cut" !== e.key && "Clear" !== e.key && "Del" !== e.key || $(this).change()) } }), t.find(".partial-submit").on({ click: function (e) { return e.preventDefault(), u ? void (u = !1) : void i($(this).closest(".form-section")) }, mousedown: function (e) { e.preventDefault(), u = !0, "undefined" != typeof r && r.blur(), i($(this).closest(".form-section")) } }), t.find(".full-submit").on({ click: function (e) { return e.preventDefault(), u ? void (u = !1) : void n() }, mousedown: function (e) { e.preventDefault(), u = !0, "undefined" != typeof r && r.blur(), n() }, focus: function () { l.activeSeg = "complete" } }), t.find(".form-clear").click(function (e) { e.preventDefault(), M() }), t.keydown(function (e) { var i, n = $(e.target); if (n.is('a[href="#"]')); else if ("undefined" == typeof r || r.is("textarea")) return; 13 !== e.which || n.is(".form-clear, .full-submit, .partial-submit") || (e.preventDefault(), i = n.closest(".form-section").find(".partial-submit"), i.length ? i.click() : t.find(".full-submit").click()) }) }, k = { _formValid: function () { t.find(".form-section").each(function () { k.formSection($(this)) }) }, formSection: function (e) { p = e || p, p.hasClass("disabled") ? O(p) : (b = 0, h = [], g = 0, f = null, p.find(".form-section-errors").empty(), p.find(".form-field").each(function () { k._formField($(this), p.data(), !1, p.find(".form-field").length) }), null === f && (C._finalFormCheck(p), y += 1)) }, _formField: function (e, t, i, n) { R._run(e, e.parents(".form-section"), n, t) } }, R = { _run: function (e, t, i, n) { var r = b === i - 1, a = e.find("input, select, textarea").is(":disabled"); if (a || (R._rules(e), R._clientResultHandler(u.data, e), u = { data: [] }), b += 1, !a) { if ("partial" === c && t.data("partial-server-stepover") === !0 || h.length > 0 || "field" === c) return void (f = null); r && null !== f && (R._serverValidate(n.endpoint, f, t), b = 0) } }, _rules: function (e) { var t, i, r = ("object" == typeof e.data("validation") ? JSON.stringify(e.data("validation")) : e.data("validation")) || "", a = e.data("type"); if ("undefined" != typeof a) if (t = n.safe(E.dataValue[a], [e], { msg: "dataType", param: a }), (E.rules.required(t) || V.isRequired(e)) && "" !== r) { i = r.split("|"); for (var o = 0; o < i.length; o += 1) "server" !== i[o] ? u.data.push(n.safe(R._clientValidate, [i[o], t, e], { msg: "ruleConfig", param: i[o] })) : (f = f || {}, f[e.attr("data-field-id")] = t) } else -1 !== r.indexOf("server") && (f = f || {}, f[e.attr("data-field-id")] = t) }, _clientValidate: function (e, t, i) { var n, r = {}, a = i.data(); return "{" === e.charAt(0) && (r = $.parseJSON(e), e = r.rule, r = r.val), a.customRegex && "regex" === e && (r = a.customRegex), !a["for"] || "confirm" !== e && "confirmStrict" !== e && "different" !== e && "differentStrict" !== e || (r.target = p.find("#" + a["for"]).val()), n = E.rules[e](t, r, i), { state: n, rule: e } }, _serverValidate: function (e, t, i) { var a, o = i.attr("data-batch-name"); return "undefined" == typeof o ? (r && n.log(n.fact.batchname), void R._serverResultHandler({ Errors: [] }, i)) : (t = V.complexObject(t), a = "undefined" != typeof FormValidation.Manifest.OutBound ? FormValidation.Manifest.OutBound.hasOwnProperty(o) ? FormValidation.Manifest.OutBound[o](t) : FormValidation.Manifest.OutBound.hasOwnProperty("defaultMap") ? FormValidation.Manifest.OutBound.defaultMap(t) : t : t, "undefined" == typeof e || "" === e ? (r && n.log(n.fact.endpoint), void R._serverResultHandler({ Errors: [] }, i)) : void (w || (w = !0, i.addClass("pending"), $.ajax({ url: e, data: JSON.stringify(a), cache: !1, type: "POST", contentType: "application/json" }).done(function (e) { var t; w = !1, x = e, r && window.console && console.log("server response:", x), i.removeClass("pending"), t = "undefined" != typeof FormValidation.Manifest.InBound ? FormValidation.Manifest.InBound.hasOwnProperty(o) ? FormValidation.Manifest.InBound[o](e) : FormValidation.Manifest.InBound.hasOwnProperty("defaultMap") ? FormValidation.Manifest.InBound.defaultMap(e) : e : e, R._serverResultHandler(t, i), f = null }).fail(function () { w = !1, i.removeClass("pending"), "undefined" == typeof S.serverErrorMessage ? n.handle(n.fact.server) : R._serverResultHandler({ Errors: [S.serverErrorMessage] }, i) })))) }, _clientResultHandler: function (e, t) { var i = !0, n = 0; if (0 === e.length) return void C._clientErrorMessageHandler(t, !0); this.resultRulesEngine(); do e[n].state === !1 && (h.push(e[n].rule), "required" === e[n].rule && (g += 1), i = !1), C._clientErrorMessageHandler(t, e[n].state, e[n].rule), n += 1; while (n < e.length && i === !0) }, _serverResultHandler: function (e, t) { var i = t.find(".form-section-errors"); if (this.resultRulesEngine(), i.empty(), e.Errors.length > 0) { for (var n = 0; n < e.Errors.length; n += 1) C._serverErrorMessageHandler(e.Errors[n], i), h.push("server"); m && i.addClass("errors") } else m && i.removeClass("errors"); C._finalFormCheck(t) }, resultRulesEngine: function () { "field" !== c || l.segs[p.data("section-id")].submit ? (r && q("action result factors:", "not field, has submitted"), m = !0) : (r && q("action result factors:", "field, not submitted"), m = !1) }, setSubmit: function () { "true" !== S.disableSubmit && "requiredonly" !== S.disableSubmit || (l.form.valid ? t.find(".full-submit, .partial-submit").removeAttr("disabled") : "true" === S.disableSubmit ? (t.find(".full-submit").attr("disabled", !0), a.each(function (e) { l.segs[e].valid ? $(this).find(".partial-submit").removeAttr("disabled") : $(this).find(".partial-submit").attr("disabled", !0) })) : "requiredonly" === S.disableSubmit && (l.form.validRequiredOnly ? t.find(".full-submit").removeAttr("disabled") : t.find(".full-submit").attr("disabled", !0), a.each(function (e) { l.segs[e].validRequiredOnly ? $(this).find(".partial-submit").removeAttr("disabled") : $(this).find(".partial-submit").attr("disabled", !0) }))) } }, C = { _clientErrorMessageHandler: function (e, t, i) { (m || S.instantFeedback === !0 && "field" === c && d.closest(".form-field")[0] === e[0]) && (S.inline && e.find(".err-msgs").children("div[data-validation]").hide(), t ? (e.addClass("valid"), e.removeClass("error")) : (e.addClass("error"), e.removeClass("valid"), "undefined" != typeof i && (S.inline && e.find(".err-msgs").children('div[data-validation="' + i + '"]').show(), S.summary && e.closest(".form-section").find(".form-section-errors").append("<div><span>" + e.find("label").first().text() + "</span><span>" + e.find(".err-msgs").children('div[data-validation="' + i + '"]').text() + "</span></div>")))) }, _serverErrorMessageHandler: function (e, t) { m && t.append($("<div></div>").text(e)) }, _finalFormCheck: function (e) { var i = e.data("section-id"); S._status.setValidity(0 === h.length, i), l.segs[i].validRequiredOnly = 0 === g, l.form.valid = !0, l.form.validRequiredOnly = !0; for (var n = 0; n < l.segs.length; n += 1) l.segs[n].valid === !1 && (l.form.valid = !1), l.segs[n].validRequiredOnly === !1 && (l.form.validRequiredOnly = !1); m && (e.toggleClass("errors", !l.segs[i].valid), t.toggleClass("errors", !l.form.valid)), this._finalActions() }, _finalActions: function () { var e = a.find(".form-section"), i = p.data("section-id"), n = "full" === c, o = y === a.length - 1 - l.disabledSegs; return e.length && (o = y === e.parents(".form-section").length - 1 - l.disabledSegs), R.setSubmit(), l.segs[i].valid || "field" === c || p.find('input[type="password"], [data-sensitive="true"] input').val(void 0), r && q("section: " + (p.data("section-id") + 1) + ", submit: ", c + ", fails: " + h.length), n && l.segs[i].valid && o && (h = [], g = 0, r && q("form passed")), (!n || n && o) && (h = [], g = 0), "partial" === c ? void v["batch_" + (i + 1)](l.segs[i].valid, p, x) : void (n && o && v.full(l.form.valid, t, x)) } }, O = function (e) { S._status.setValidity(!1, e.data("section-id")), e.removeClass("errors"), e.find(".form-field").removeClass("error valid"), S.summary && e.find(".form-section-errors").empty(), S.inline && e.find(".err-msgs").children("div[data-validation]").hide() }, M = function () { S._status.setSubmitted(!1), t.removeClass("errors"), a.removeClass("errors"), o.removeClass("error valid"), S.summary && a.find(".form-section-errors").empty(), S.inline && o.find(".err-msgs").children("div[data-validation]").hide(), s.val(void 0), s.filter("select").each(function () { var e = !1; $(this).find("option").each(function () { return this.defaultSelected ? (this.selected = !0, e = !0, !1) : void 0 }), e || ($(this)[0].options[0].selected = !0), $(this).trigger("change", [{ prevent: !0 }]) }) }, E = { dataValue: { hidden: function (e) { return e.find("input").val() }, number: function (e) { return e.find("input").val() }, text: function (e) { return e.find("input").val() }, url: function (e) { return e.find("input").val() }, tel: function (e) { return e.find("input").val() }, search: function (e) { return e.find("input").val() }, multiline: function (e) { return e.find("textarea").val() }, email: function (e) { return e.find("input").val() }, radio: function (e) { return e.find('input[type="radio"]:checked').index('input[type="radio"]') }, select: function (e) { var t = e.find("select").val(); return "-1" === t ? -1 : t }, selectGroup: function (e) { return e.find("select").find("option:selected").parent().data("group-id") }, checkbox: function (e) { for (var t = e.find('input[type="checkbox"]'), i = 0; i < t.length; i += 1) if (e.find('input[type="checkbox"]')[i].checked) return !0; return !1 }, multi: function (e) { var t = ""; return e.find("input").each(function () { t += $(this).val() }), t }, file: function (e) { return e.find("input")[0].files } }, rules: { number: function (e) { return "string" == typeof e && -1 !== e.indexOf(",") && (e = e.replace(",", ".")), !isNaN(parseFloat(e)) && isFinite(e) }, minLength: function (e, t) { return e.length >= t }, maxLength: function (e, t) { return e.length <= t }, min: function (e, t) { return e >= t }, max: function (e, t) { return t >= e }, required: function (e) { return "" !== e && -1 !== e && null !== e && e !== !1 }, alpha: function (e) { return /^[a-zA-Z\s]+$/.test(e) }, range: function (e, t) { return e >= t.min && e <= t.max }, email: function (e) { return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e) }, match: function (e, t) { return e === t }, checked: function (e) { return e }, unchecked: function (e) { return !e }, confirm: function (e, t) { return e.toLowerCase() === t.target.toLowerCase() }, confirmStrict: function (e, t) { return e === t.target }, different: function (e, t) { return e.toLowerCase() !== t.target.toLowerCase() }, differentStrict: function (e, t) { return e !== t.target }, regex: function (e, t) { return l.customRules[t].test(e) }, fileType: function (e, t) { for (var i = 0; i < e.length; i += 1) if (-1 === $.inArray(e[i].type, t)) return !1; return !0 }, fileSize: function (e, t) { for (var i = 0; i < e.length; i += 1) if (e[i].size < t.min || e[i].size > t.max) return !1; return !0 }, fileQuantity: function (e, t) { return e.length >= t.min && e.length <= t.max } } }, q = function () { var e = []; for (var t in arguments) e.push(arguments[t]); window.console && console.log(e.join("")) }; _(), this.id = l.id, this.api = { events: v, validateBatch: function (e) { return c = "partial", k.formSection(e) }, validateForm: function () { return c = "submit", k._formValid() }, clearForm: M, clearSeg: O, debug: function (e) { "boolean" == typeof e && (r = e) } } }, i = function () { var e = {}; $(".mod-form").each(function (i) { var n = new t($(this), i += 1); e[n.id] = n.api }), window.FormValidation.Application.prototype.api = e }, n = { fact: { dataType: "data type does not exist for field", ruleConfig: "Validation rule configuration contains errors for field", server: "Service error", endpoint: "Invalid endpoint", batchname: "Invalid batch-name", ruleExtension: "Invalid rule extension configuration in ", loadRuleExtensionFile: "FormValidation requires to load rules extension file" }, safe: function (e, t, i) { try { return e.apply(this, t) } catch (n) { this.handle(this.fact[i.msg] + ": '" + (i.param || "") + "'") } }, log: function (e) { window.console && console.info(e) }, handle: function (e) { throw new Error(e) } }; this.init = function () { i(this) } }, window.FormValidation.Manifest = function (e) { return window.formValidation = window.formValidation || new window.FormValidation.Application, e.init = window.formValidation.init, { OutBound: void 0, InBound: void 0 } }(window.FormValidation);